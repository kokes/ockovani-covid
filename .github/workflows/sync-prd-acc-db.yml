name: sync-prd-acc-db

on:
  workflow_dispatch
    
jobs:
  deploy:
    name: Sync databases - PRD to ACC
    environment: acceptance
    runs-on: ubuntu-18.04
    env:
      APP_DIR: '${HOME}/acc/app'
      TMP_DIR: '${HOME}/acc/tmp'
      RELEASES_DIR: '${HOME}/acc/releases'
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
      SSH_PORT: ${{ secrets.SSH_PORT }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_USER_WEB: ${{ secrets.SSH_USER_WEB }}
    steps:
      - uses: actions/checkout@v2
      - id: ip
        uses: haythem/public-ip@v1.2
      - name: Prepare config file
        uses: falnyr/replace-env-vars-action@master
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
        with:
          filename: config.ci.py
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh/
          ssh-keyscan -H ${SSH_HOST} >> ~/.ssh/known_hosts
          eval `ssh-agent -s`
          echo "${SSH_KEY}" | tr -d '\r' | ssh-add -
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV
          echo "Public IP: ${{ steps.ip.outputs.ipv4 }}"      
      - name: Execute db sync prd -> acc
        run: ssh ${SSH_USER_WEB}@${SSH_HOST} -p ${SSH_PORT} "pg_dump -c ockovani_prd | psql ockovani_acc"
      - name: Execute migrations
        run: ssh ${SSH_USER_WEB}@${SSH_HOST} -p ${SSH_PORT} "cd ${APP_DIR} && source venv/bin/activate && flask db upgrade"
      - name: Restart flask
        run: ssh ${SSH_USER}@${SSH_HOST} -p ${SSH_PORT} "sudo systemctl stop ockovani-acc && sudo systemctl start ockovani-acc"
